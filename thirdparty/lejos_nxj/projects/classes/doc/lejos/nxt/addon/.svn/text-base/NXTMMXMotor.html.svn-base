<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_24) on Mon May 16 13:33:37 BST 2011 -->
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<TITLE>
NXTMMXMotor (leJOS NXJ API documentation)
</TITLE>

<META NAME="date" CONTENT="2011-05-16">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="NXTMMXMotor (leJOS NXJ API documentation)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../lejos/nxt/addon/NXTMMX.html" title="class in lejos.nxt.addon"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../lejos/nxt/addon/OpticalDistanceSensor.html" title="class in lejos.nxt.addon"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?lejos/nxt/addon/NXTMMXMotor.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="NXTMMXMotor.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
lejos.nxt.addon</FONT>
<BR>
Class NXTMMXMotor</H2>
<PRE>
<A HREF="../../../java/lang/Object.html" title="class in java.lang">java.lang.Object</A>
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>lejos.nxt.addon.NXTMMXMotor</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>NXTMMXMotor</B><DT>extends <A HREF="../../../java/lang/Object.html" title="class in java.lang">Object</A></DL>
</PRE>

<P>
Supports Mindsensors NXTMMX. this device allows you to connect two 
 additional motors to your robot. Multiple NXTMMXs can be chained together.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Michael D. Smith mdsmitty@gmail.com</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#NXTMMXMotor(lejos.nxt.addon.NXTMMX, int)">NXTMMXMotor</A></B>(<A HREF="../../../lejos/nxt/addon/NXTMMX.html" title="class in lejos.nxt.addon">NXTMMX</A>&nbsp;mux,
            int&nbsp;motor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor, you don't have to worry about this its called two times by the constructor
 in the NXTMMX class to create each motor instance.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#backward()">backward</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Causes motor to rotate backwards.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#flt()">flt</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Causes motor to float.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#forward()">forward</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Causes motor to rotate forward.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#getLimitAngle()">getLimitAngle</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the angle that a Motor is rotating to.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#getMode()">getMode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the mode</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#getRotationSpeed()">getRotationSpeed</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;same as get speed I need to work on this still</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#getSpeed()">getSpeed</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return the set speed of the motor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#getTachoCount()">getTachoCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tachometer count.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isMoving()">isMoving</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the motor is in motion.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isOverloaded()">isOverloaded</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if the motor stalled due to over load.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isRamping()">isRamping</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if the motor is ramping up or down.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isRegulating()">isRegulating</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine whether speed control is on or not</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isSmoothAcceleration()">isSmoothAcceleration</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if speed ramping is enabled</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isStalled()">isStalled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if the motor is stalled or not</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#isTaskRunning()">isTaskRunning</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if the motor is running a task.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#lock()">lock</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Locks the motor in current position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#regulateSpeed(boolean)">regulateSpeed</A></B>(boolean&nbsp;controlSpeed)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;turns speed regulation on and off for tacho and time methods.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#resetTachoCount()">resetTachoCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Resets the tachometer count to zero.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#rotate(int)">rotate</A></B>(int&nbsp;deg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Causes motor to rotate by a specified angle.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#rotate(int, boolean)">rotate</A></B>(int&nbsp;deg,
       boolean&nbsp;immediateReturn)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;same as rotate but returns immediately</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#rotateTime(int, boolean)">rotateTime</A></B>(int&nbsp;time,
           boolean&nbsp;direction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rotates the motor for specified amount of time</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#rotateTime(int, boolean, boolean)">rotateTime</A></B>(int&nbsp;time,
           boolean&nbsp;direction,
           boolean&nbsp;immediateReturn)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runs motor for specified amount of time and immediately returns</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#rotateTo(int)">rotateTo</A></B>(int&nbsp;deg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates to the tacho position indicated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#rotateTo(int, boolean)">rotateTo</A></B>(int&nbsp;deg,
         boolean&nbsp;immediateReturn)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates to the tacho position that you want and immediately returns.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#setSpeed(int)">setSpeed</A></B>(int&nbsp;speed)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets motor speed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#setTachoBreak(boolean)">setTachoBreak</A></B>(boolean&nbsp;tachoBreak)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when this bit is set after tacho methods the motor will break.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#setTachoLock(boolean)">setTachoLock</A></B>(boolean&nbsp;tachoLock)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when using this bit after tacho methods force feed back
  will be used to hold the motor in place.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#smoothAcceleration(boolean)">smoothAcceleration</A></B>(boolean&nbsp;rampUp)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enables and disables speed ramping</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../lejos/nxt/addon/NXTMMXMotor.html#stop()">stop</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stops the motor</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="../../../java/lang/Object.html" title="class in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../java/lang/Object.html#clone()">clone</A>, <A HREF="../../../java/lang/Object.html#equals(java.lang.Object)">equals</A>, <A HREF="../../../java/lang/Object.html#finalize()">finalize</A>, <A HREF="../../../java/lang/Object.html#getClass()">getClass</A>, <A HREF="../../../java/lang/Object.html#hashCode()">hashCode</A>, <A HREF="../../../java/lang/Object.html#notify()">notify</A>, <A HREF="../../../java/lang/Object.html#notifyAll()">notifyAll</A>, <A HREF="../../../java/lang/Object.html#toString()">toString</A>, <A HREF="../../../java/lang/Object.html#wait()">wait</A>, <A HREF="../../../java/lang/Object.html#wait(long)">wait</A>, <A HREF="../../../java/lang/Object.html#wait(long, int)">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="NXTMMXMotor(lejos.nxt.addon.NXTMMX, int)"><!-- --></A><H3>
NXTMMXMotor</H3>
<PRE>
public <B>NXTMMXMotor</B>(<A HREF="../../../lejos/nxt/addon/NXTMMX.html" title="class in lejos.nxt.addon">NXTMMX</A>&nbsp;mux,
                   int&nbsp;motor)</PRE>
<DL>
<DD>Constructor, you don't have to worry about this its called two times by the constructor
 in the NXTMMX class to create each motor instance.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>mux</CODE> - the motor multiplexor<DD><CODE>motor</CODE> - the index of the motor</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="backward()"><!-- --></A><H3>
backward</H3>
<PRE>
public void <B>backward</B>()</PRE>
<DL>
<DD>Causes motor to rotate backwards.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="flt()"><!-- --></A><H3>
flt</H3>
<PRE>
public void <B>flt</B>()</PRE>
<DL>
<DD>Causes motor to float.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="forward()"><!-- --></A><H3>
forward</H3>
<PRE>
public void <B>forward</B>()</PRE>
<DL>
<DD>Causes motor to rotate forward. TODO
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLimitAngle()"><!-- --></A><H3>
getLimitAngle</H3>
<PRE>
public int <B>getLimitAngle</B>()</PRE>
<DL>
<DD>Return the angle that a Motor is rotating to.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the limit angle</DL>
</DD>
</DL>
<HR>

<A NAME="getMode()"><!-- --></A><H3>
getMode</H3>
<PRE>
public int <B>getMode</B>()</PRE>
<DL>
<DD>Returns the mode
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the mode
 : 1 = forward, 2= backward, 3 = stop, 4 = float</DL>
</DD>
</DL>
<HR>

<A NAME="isRegulating()"><!-- --></A><H3>
isRegulating</H3>
<PRE>
public boolean <B>isRegulating</B>()</PRE>
<DL>
<DD>Determine whether speed control is on or not
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if speed control is on, else false</DL>
</DD>
</DL>
<HR>

<A NAME="isMoving()"><!-- --></A><H3>
isMoving</H3>
<PRE>
public boolean <B>isMoving</B>()</PRE>
<DL>
<DD>Returns true if the motor is in motion.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if the motor is currently in motion, else false</DL>
</DD>
</DL>
<HR>

<A NAME="isStalled()"><!-- --></A><H3>
isStalled</H3>
<PRE>
public boolean <B>isStalled</B>()</PRE>
<DL>
<DD>Determines if the motor is stalled or not
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if stalled, else false</DL>
</DD>
</DL>
<HR>

<A NAME="isOverloaded()"><!-- --></A><H3>
isOverloaded</H3>
<PRE>
public boolean <B>isOverloaded</B>()</PRE>
<DL>
<DD>Determines if the motor stalled due to over load.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if overload, else false</DL>
</DD>
</DL>
<HR>

<A NAME="isTaskRunning()"><!-- --></A><H3>
isTaskRunning</H3>
<PRE>
public boolean <B>isTaskRunning</B>()</PRE>
<DL>
<DD>Determines if the motor is running a task. this does not mean the motor is moving.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if the motor is running a task, else false</DL>
</DD>
</DL>
<HR>

<A NAME="stop()"><!-- --></A><H3>
stop</H3>
<PRE>
public void <B>stop</B>()</PRE>
<DL>
<DD>stops the motor
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTachoCount()"><!-- --></A><H3>
getTachoCount</H3>
<PRE>
public int <B>getTachoCount</B>()</PRE>
<DL>
<DD>Returns the tachometer count.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>tachometer count in degrees</DL>
</DD>
</DL>
<HR>

<A NAME="resetTachoCount()"><!-- --></A><H3>
resetTachoCount</H3>
<PRE>
public void <B>resetTachoCount</B>()</PRE>
<DL>
<DD>Resets the tachometer count to zero.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getRotationSpeed()"><!-- --></A><H3>
getRotationSpeed</H3>
<PRE>
public int <B>getRotationSpeed</B>()</PRE>
<DL>
<DD>same as get speed I need to work on this still
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSpeed()"><!-- --></A><H3>
getSpeed</H3>
<PRE>
public int <B>getSpeed</B>()</PRE>
<DL>
<DD>return the set speed of the motor.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>0 - 100 has nothing to do with rpm or rps</DL>
</DD>
</DL>
<HR>

<A NAME="regulateSpeed(boolean)"><!-- --></A><H3>
regulateSpeed</H3>
<PRE>
public void <B>regulateSpeed</B>(boolean&nbsp;controlSpeed)</PRE>
<DL>
<DD>turns speed regulation on and off for tacho and time methods. forwards
  and backwards are not affected because if its off they just wont work.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="rotate(int)"><!-- --></A><H3>
rotate</H3>
<PRE>
public void <B>rotate</B>(int&nbsp;deg)</PRE>
<DL>
<DD>Causes motor to rotate by a specified angle. The resulting tachometer count 
 should be within +- 2 degrees on the NXT. This method does not return until 
 the rotation is completed.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>deg</CODE> - - by which the motor will rotate.</DL>
</DD>
</DL>
<HR>

<A NAME="rotate(int, boolean)"><!-- --></A><H3>
rotate</H3>
<PRE>
public void <B>rotate</B>(int&nbsp;deg,
                   boolean&nbsp;immediateReturn)</PRE>
<DL>
<DD>same as rotate but returns immediately
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>deg</CODE> - - number of deg to rotate.<DD><CODE>immediateReturn</CODE> - - does not matter if true or false it will return after mux is programmed.</DL>
</DD>
</DL>
<HR>

<A NAME="rotateTo(int)"><!-- --></A><H3>
rotateTo</H3>
<PRE>
public void <B>rotateTo</B>(int&nbsp;deg)</PRE>
<DL>
<DD>rotates to the tacho position indicated.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>deg</CODE> - - the tacho position that you want.</DL>
</DD>
</DL>
<HR>

<A NAME="rotateTo(int, boolean)"><!-- --></A><H3>
rotateTo</H3>
<PRE>
public void <B>rotateTo</B>(int&nbsp;deg,
                     boolean&nbsp;immediateReturn)</PRE>
<DL>
<DD>rotates to the tacho position that you want and immediately returns.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="rotateTime(int, boolean)"><!-- --></A><H3>
rotateTime</H3>
<PRE>
public void <B>rotateTime</B>(int&nbsp;time,
                       boolean&nbsp;direction)</PRE>
<DL>
<DD>Rotates the motor for specified amount of time
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - 1 - 255 sec<DD><CODE>direction</CODE> - true is forward false is backward.</DL>
</DD>
</DL>
<HR>

<A NAME="rotateTime(int, boolean, boolean)"><!-- --></A><H3>
rotateTime</H3>
<PRE>
public void <B>rotateTime</B>(int&nbsp;time,
                       boolean&nbsp;direction,
                       boolean&nbsp;immediateReturn)</PRE>
<DL>
<DD>runs motor for specified amount of time and immediately returns
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - = 1 - 255 sec<DD><CODE>direction</CODE> - true is forward false is backward.<DD><CODE>immediateReturn</CODE> - - does not matter if true or false</DL>
</DD>
</DL>
<HR>

<A NAME="setSpeed(int)"><!-- --></A><H3>
setSpeed</H3>
<PRE>
public void <B>setSpeed</B>(int&nbsp;speed)</PRE>
<DL>
<DD>sets motor speed. this has nothing to do with rpm or rps its just
  a percentage speed type of value
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>speed</CODE> - 0 - 100</DL>
</DD>
</DL>
<HR>

<A NAME="smoothAcceleration(boolean)"><!-- --></A><H3>
smoothAcceleration</H3>
<PRE>
public void <B>smoothAcceleration</B>(boolean&nbsp;rampUp)</PRE>
<DL>
<DD>enables and disables speed ramping
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rampUp</CODE> - true turns it on false turns it off</DL>
</DD>
</DL>
<HR>

<A NAME="isSmoothAcceleration()"><!-- --></A><H3>
isSmoothAcceleration</H3>
<PRE>
public boolean <B>isSmoothAcceleration</B>()</PRE>
<DL>
<DD>Determines if speed ramping is enabled
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if smooth acceleration is on, else false</DL>
</DD>
</DL>
<HR>

<A NAME="isRamping()"><!-- --></A><H3>
isRamping</H3>
<PRE>
public boolean <B>isRamping</B>()</PRE>
<DL>
<DD>Determines if the motor is ramping up or down. This is different
  than isSmoothAcceleration() as it returns the current status
   not what is enabled.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>if ramping up or down, else false</DL>
</DD>
</DL>
<HR>

<A NAME="setTachoLock(boolean)"><!-- --></A><H3>
setTachoLock</H3>
<PRE>
public void <B>setTachoLock</B>(boolean&nbsp;tachoLock)</PRE>
<DL>
<DD>when using this bit after tacho methods force feed back
  will be used to hold the motor in place. if the motor is 
  moved it will move back to the specified position.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tachoLock</CODE> - true turns it on</DL>
</DD>
</DL>
<HR>

<A NAME="setTachoBreak(boolean)"><!-- --></A><H3>
setTachoBreak</H3>
<PRE>
public void <B>setTachoBreak</B>(boolean&nbsp;tachoBreak)</PRE>
<DL>
<DD>when this bit is set after tacho methods the motor will break.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tachoBreak</CODE> - turns it on.</DL>
</DD>
</DL>
<HR>

<A NAME="lock()"><!-- --></A><H3>
lock</H3>
<PRE>
public void <B>lock</B>()</PRE>
<DL>
<DD>Locks the motor in current position. Uses active feed back to hold it.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../lejos/nxt/addon/NXTMMX.html" title="class in lejos.nxt.addon"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../lejos/nxt/addon/OpticalDistanceSensor.html" title="class in lejos.nxt.addon"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?lejos/nxt/addon/NXTMMXMotor.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="NXTMMXMotor.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
